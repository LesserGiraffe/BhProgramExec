/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/tutorial_java_projects.html
 */

plugins {
	// Apply the java plugin to add support for Java
	id 'java'

	// Apply the application plugin to add support for building an application
	id 'application'
}

repositories {
	// Use jcenter for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	jcenter()
}

dependencies {}

// Define the main class for the application
ext.jarName = 'BhProgramExecEnvironment.jar'
ext.mainClass = 'net.seapanda.bunnyhop.programexecenv.BhProgramExecEnvironment'
ext.SYS_HOME = System.getenv('HOME')
ext.JDK_VER = 11
ext.fs = File.pathSeparator
ext.projName = 'BhProgramExecEnvironment'

compileJava {

	doFirst {

		options.fork = true
		options.forkOptions.executable = SYS_HOME + '/java/' + JDK_VER + '/jdk/bin/javac'
		
		if (JDK_VER >= 11) {
			options.sourcepath = files("$projectDir/src/main/java")
			options.compilerArgs = [
				'-source', JDK_VER,
				'-target', JDK_VER,
				'-encoding', 'UTF8',
				'--module-path', "$projectDir/mlib",
			]
			classpath = files()
		}
		else {
			sourceSets {
				main {
					java {
						exclude 'module-info.java'
					}
				}
			}

			options.sourcepath = files("$projectDir/src/main/java")
			sourceCompatibility = JDK_VER
    		targetCompatibility = JDK_VER
			options.compilerArgs = [
				'-encoding', 'UTF8',
			]
		}
	}
}

task createJar(type:Exec) {

	dependsOn 'compileJava'
	doFirst {
	
		ant.mkdir(dir:"$projectDir/$JDK_VER")
		if (JDK_VER >= 11) {
			commandLine ((SYS_HOME + '/java/' + JDK_VER +'/jdk/bin/jar'),
						'--create',
						'--file', "$projectDir/$JDK_VER/$jarName",
						'--main-class', "$mainClass",
						'--module-version', '1.0',
						'-C', "$projectDir/build/classes/java/main", '.')
		}
		else {
			commandLine ((SYS_HOME + '/java/' + JDK_VER +'/jdk/bin/jar'),
						'cfe',
						"$projectDir/$JDK_VER/$jarName",
						"$mainClass",
						'-C', "$projectDir/build/classes/java/main", '.')
		}
	}
}

task runApp(type: JavaExec) {

	dependsOn 'createJar'
	doFirst {
		executable = SYS_HOME + '/java/' + JDK_VER + '/jdk/bin/java'
		main = ''
		jvmArgs = [
			'-jar', "$projectDir/$JDK_VER/$jarName",
		]
		classpath = files()
	}
}

